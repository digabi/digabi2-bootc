---
name: Build disk images

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - "./.github/workflows/build-disk.yml"

env:
  IMAGE_NAME: ${{ github.event.repository.name }} # output of build.yml, keep in sync
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}" # do not edit
  DEFAULT_TAG: "latest"
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608" # "quay.io/centos-bootc/bootc-image-builder:latest" - see https://github.com/osbuild/bootc-image-builder/pull/954

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build disk images
    runs-on: "ubuntu-24.04"
    strategy:
      fail-fast: false
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - uses: extractions/setup-just@v3

      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          # Lowercase the image uri
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> ${GITHUB_ENV}
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "USER_UID=${USER_UID}" >> ${GITHUB_ENV}
          echo "USER_GID=${USER_GID}" >> ${GITHUB_ENV}

      - name: Install dependencies
        run: |
          set -x
          sudo apt-get update -y
          sudo apt-get install -y \
            podman qemu-utils

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Login to GitHub Container Registry
        uses: redhat-actions/podman-login@v1
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install to raw image
        id: prebuild
        run: |
          truncate -s 8G ${{ github.workspace }}/"${{ env.IMAGE_NAME }}.raw"
          sudo podman run \
            --rm \
            --privileged \
            --pid=host \
            --security-opt label=type:unconfined_t \
            -v /dev:/dev \
            -v /var/lib/containers:/var/lib/containers \
            -v "${{ github.workspace }}":/output \
              "${{ env.IMAGE_REGISTRY }}"/"${{ env.IMAGE_NAME }}":"${{ env.DEFAULT_TAG }}" \
                bootc install to-disk \
                  --generic-image \
                  --karg=quiet --karg=rhgb \
                  --via-loopback \
                  --filesystem btrfs \
                  --wipe /output/"${{ env.IMAGE_NAME }}.raw"

      - name: Build ISO image
        id: build
        run: qemu-img convert "${{ github.workspace }}/${{ env.IMAGE_NAME }}.raw" "${{ github.workspace }}/${{ env.IMAGE_NAME }}.iso"

      - name: Assume AWS role
        if: github.event_name != 'pull_request'
        uses: digabi/workflows-common/actions/assume-digabi-aws-role@main
        with:
          aws-account-id: ${{ secrets.UTILITY_AWS_ACCOUNT_ID }}

      - name: Upload image to S3
        if: github.event_name != 'pull_request'
        env:
          BUCKET_URL: "s3://digabi.utility.abitti2-bucket"
          CF_DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID }}
        run: |
          aws s3 cp ${{ github.workspace }}/${{ env.IMAGE_NAME }}.iso "$BUCKET_URL/linux/${{ env.IMAGE_NAME }}.iso"
          aws cloudfront create-invalidation --distribution-id "$CF_DISTRIBUTION_ID" --paths "/linux/${{ env.IMAGE_NAME }}.iso"
